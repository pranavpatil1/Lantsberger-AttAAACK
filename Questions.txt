30
Which of the following methods does not belong to the String class?
1
char get(int index)
char charAt(int index)
String trim()
String substring(int index)
The get method is only applicable to the List class. The other methods\ncharAt(), trim(), and substring are all applicable to Strings. You may want to\nexplore the String class APIs for more info.
Which of the following lines of code is ACK-worthy?
1
public int heartRate;
for (int a = 0; a <= array.length; a++)
both for loops
for (int a : array)
The for-each loop and the regular for loop are properly defined. That\neliminates the (1) and (2) option as well. The only available option is the public\ninstance variable, which is very ACK-worthy. Lantsberger told you so.
Which of the following is an invalid statement? A is a 6 by 6 \nInteger matrix.
4
A[0][0].intValue()
A[5].length
A.length
A[6][0].intValue()
The A[6][0] is the only invalid option because a 6 x 6 array's indexes\ngo from 0 to 5. Putting in 6 will lead to an ArrayIndexOutOfBoundsException. The\nother matrix operations work. Review your matrix lessons to reaffirm.
Which of the following is invalid for a S, a String object of length 10?
2
S.substring(9, 10)
S.substring(11)
S.substring(9)
S.charAt(0)
charAt(0) and substring(9) both definitely work. substring(9,10) works\nbecause it begins from the last letter and goes up until the 10th index, but does\n not include it, so there is no IndexOutOfBoundsException. substring(10) does not\n work because it is not an index within the string.
Where does this class import from?\nArrayList
1
java.util.*
java.lang.*
java.io.*
java.text.*
This is a gotta know.
Where does this class import from?\nString
2
java.util.*
java.lang.*
java.io.*
java.text.*
This is a gotta know.
What does this method do?\n      public static boolean mystery (boolean bool) {\n              return bool ? (!bool ? false : !bool) : !bool;
1
Return !bool
Return false always 
Return true always
Compiler error
You can solve this by slowly tracing the code and pluggin in both true\nand false as bool. You'll see that if true is put in, false is returned and if false\n is put in, true is returned. 
Which of the following classes use .length()?
3
arrays (int[])
List
String
Integer
This should be memorized. It doesn't make sense for Integer to have .length().\nList has .size() and arrays have .length.
Which of the following classes use .length?
1
arrays (int[])
List
String
Integer
This should be memorized. It doesn't make sense for Integer to have .length().\nList has .size() and Strings have .length().
Which of the following classes use .size()?
2
arrays (int[])
List
String
Integer
This should be memorized. It doesn't make sense for Integer to have .length().\nStrings have .length() and arrays have .length.
Which of the following is invalid?
4
int[] array = new int[4];
int[] array = {1, 2, 3, 4};
int[][] matrix = { {1, 2}, {3, 4} };
int[][] matrix; matrix = { {1, 2},  {3, 4} };
You cannot explicitly instantiate a matrix on a line separate from the declaration.\nYou must do this as it is declared. The instantiated arrays are correct.
What is the difference between overriding and overloading?
3
Overriding is replacing a method in the same class. Overloading is adding a\n method of the same name in a subclass.
Overriding is adding a method of the same in the same class. Overloading is \nreplacing a method from a superclass within a subclass. 
Overriding is replacing a method from a superclass within a subclass. Overloading\n is adding a method of the same in the same class. 
Overriding is creating a class of the same signature as another class, therefore\nreplacing it. Overloading is adding a class of the same name to a project.
Overriding is when you replace a method of a superclass within a subclass.\nOverloading is when you have multiple methods with the same name but different signatures.
Which of the following can have instance variables?\nI.  abstract class\nII.  concrete class\nIII.   method\nIV.   interface
2
II only
I and II
I and IV only
I, II, III, IV
A method cannot have instance variables, though it has variables. An interface\ncannot have instance variables. A concrete class can, and so can an abstract class. 
What is the scope of the following variables? (method, block, class)\n    private static final int b = 0;\n public static void main (String[] args) {\n      int a = b;\nSystem.out.println(++a);\n    }\n    a,b,args
1
block, class, method
method, class, method
block, block, block
method, block, class
b has class scope, as it is an instance variable. args has method scopes\nbecause it is an argument. a has block scope because it is defined within a method.
Is the str an argument (formal parameter) or a parameter?\n     System.out.println(str);
3
Argument because an argument is used in calling a method.
Parameter because a parameter is used in defining a method.
Parameter because a parameter is used when calling a method.
Argument because an argument is used when defining a method.
An argument is used when coding a method, and a parameter is used\nwhen calling it.
Under what conditions can binary search be used?
2
Has to have no duplicates
Must be sorted
Can only be used with arrays, not ArrayLists or similar objects.
All of the above
Binary search can be used in sorted arrays or ArrayLists. It doesn't\nmatter whether it has duplicates or not because it works either way.
Does an int or a byte primitive data type need more storage, and\nhow much?
1
int - 4 bytes
int - 8 bytes
byte - 1 bytes
byte 2 - 8 bytes
An int requires more storage than a byte. An int takes up 4 bytes.
What error will occur if a coder attempts to divide by 0? 
2
CastClassException
ArithmeticException
IncorrectMathException
NullPointerException
IncorrectMathException isn't a thing. CastClassException occurs when you are \ntrying to typecast something into an incompatible data type. NullPointerException\nis when you are trying to do something to a null object.
Which of the following data types is NOT a primitive? 
3
char
long
String
double
This is a basic question that should be memorized. Strings are objects.
A sorted list of Nobel Prize winners is being maintained. \nEvery month a new winner is added. \nWhich sorting algorithm will be the most efficient to maintain it?
1
InsertionSort
BubbleSort
SelectionSort
BogoSort
BogoSort and Bubble Sort are both extremely inefficient. InsertionSort is typically\nfar more efficient than SelectionSort, especially in this case.
What is the order of this algorithm?\nfor (int i = 0; i < N; i++)\n    for (int j = 0; j < 5; j ++)\n       System.out.println (i + " " + j);
4
O(1)
O(log n)
O(n)
O(n^2)
As you can tell by the nested for loops, this algorithm is quadratic. The code\nexecutes 5N times, which is roughly N*N.
Which of the following segments of code does not compile?\nThe GoodFood class extends the Food class.
1
GoodFood[] foods = {new GoodFood(), new Food(),\nnew GoodFood()};
Food[] foods = {new Food(), new GoodFood(),\nnew GoodFood()};
Food[] foods = {new Food(), new Food(), new Food()};
GoodFood[] foods = {new GoodFood(), new GoodFood(),\nnew GoodFood()};
You cannot instantiate a superclass object and call it an object of\nthe subclass. Consider object heirarchies and is a kind of relationships. Food is not a kind\nof GoodFood.
Which of the following segments of code does not compile?\nThe GoodFood class extends the Food class.
1
GoodFood[] foods = new Food[3];
GoodFood[] foods = new GoodFood[3];
Food[] foods = new Food[3];
Food[] foods = new GoodFood[3];
You cannot instantiate a superclass object and call it an object of the subclass.\nConsider object heirarchies and is a kind of relationships. Food is not a kind\nof GoodFood.
Food is an abstract class, GoodFood is a concrete subclass of Food. \nWhich of the following segments of code compiles? 
2
Food[] foods = new Food[3];
Food[] foods = new GoodFood[]; 
GoodFood[] foods = new Food[3];
GoodFood[] foods = new Food[];
Consider object heirarchies and is a kind of relationships. Food is not a kindof\nGoodFood. Abstract classes also cannot be instantiated. The only option is\nFood[] foods = new GoodFood[];
What will the code output?\n    public class Food {\n       String toString() {         return "food”;     };\n     public class GoodFood extends Food {\n       String toString() {         return "good”      }\n     }\n     Food[] foods = {new Food(), new GoodFood(), new Food()};\n     for (Food food : foods)\n       System.out.print(food + " ");
1
food good food
food food food
good good good
good food good
Trace the code. Consider that toString() for GoodFood overrides Food's\ntoString() method when there is a GoodFood object.
In which case is it not a good idea to use a for-each loop?
2
When printing the contents of an ArrayList
When removing an element from an ArrayList
When traversing an ArrayList to find a certain element
When summing up the contents of an array
You cannot change the contents of an array with a for-each loop, because if\nyou try,you will be modifying the object holding the value, not the value itself.
Which of the following code will compile and run as intended?
2
ArrayList types = new ArrayList(); types.set(0, 1);\n int leverType = types.get(0);
ArrayList<Integer> types = new ArrayList()<Integer>; types.set(0, 1); \n int leverType = types.get(0).intValue();
ArrayList<Integer> types = new ArrayList()<Integer>; types.set(0, 1); \n int leverType = types.get(0);
ArrayList types = new ArrayList(); types.set(0, 1); \n int leverType = types.get(0).intValue();
The non-generic ArrayLists return Objects when types.get() is called,\nand intValue() cannot be called on an object, nor can they be converted to an int. The generics\noption without intValue() fails to find the value of the Integer.
Which of the following search algorithms would be the most\nefficient to apply to an unsorted list of 50 integers?
2
Binary search
Sequential search
Sort the list using selection sort and then use binary search
Sort the list using merge sort and then use binary search
Because the list is unsorted, Binary Search would not work. Both SelectionSort\nand MergeSort options would be less efficient than straight-up using sequential search,\nconsidering their orders.
What is the purpose of a compiler?
1
Translates your code into bytecode
Manages your computer’s storage
Autocorrects your code
Compiles all of the computer’s data into one location
A compiler converts your code into a language readable by the computer,\nwhich is called bytecode.
Which of the following data types cannot be used in an ArrayList?
1
int
Integer
String
Double
ArrayLists can only hold Objects. int is not an Object.